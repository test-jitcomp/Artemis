# Copyright (C) 2016 Intel Corporation
# Modifications copyright (C) 2017-2018 Azul Systems
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

#----------------------------------------------------------
#  Java* Fuzzer for Android*
#  Basic classes
#
# Authors: Mohammad R. Haghighat, Dmitry Khukhro, Andrey Yakovlev
#----------------------------------------------------------
# 
# To do:
#  - threads interacting with each other
#  - intrinsics
# ----------------------------------------------------------
#  Bugs:
#  - Rare case: Java loads classes only when they are needed. Sometimes static initialization of a class depends on another's class 
#    instantiation and the second class is not yet loaded. I couldn't catch all of the the root causes yet.   
#  - variables that are not used in statements ?
#  - EnhancedForStmt: induction var (which is not) is not used - find out why
# ===============================================================================

#----------------------------------------------------------
# Java* Fuzzer test generator
#
# Modifications 2017-2018: Nina Rinskaya (Azul Systems)
#----------------------------------------------------------
#

$debug = true
require 'Config.rb'
require 'Basics.rb'
require 'Statements.rb'
require 'Loops.rb'
require 'ControlFlow.rb'
require 'Exceptions.rb'
require 'Methods.rb'
require 'Vectorization.rb'
require 'LibMethods.rb'

$names = Hash.new(0) # need global list of names to avoid hiding names in nested contexts
$imports = Hash.new(0)
$conf = Conf.new(true)
$stop_creating_outer_fields = false # We must not create class fields after the beginning of source code generation 
$run_methods = 0
defOperators()
defLibMethods()
#------------------------------------------------------------
# generate and output Java classes of the test
$auxClasses = "" # auxiliary classes required by other classes code
while true
    $globalContext = Context.new(nil,Con::GLOBAL,nil,nil,true)
    mainClass = JavaClass.new(true) # main class
    break if strongEnough?(mainClass)
end
puts wrapLines("// Generated by Java* Fuzzer test generator (" + TOOL_VERSION + "). " + Time.now.ctime + "\n")
#puts wrapLines("// srand = "+$random_seed.to_s+"\n\n")
puts wrapLines("package "+$conf.package+";\n\n") if $conf.package.length > 0
puts wrapLines($imports.keys.collect {|s| "import " + s + ";\n"}.join() + "\n") if $imports.size > 0
$stop_creating_outer_fields = true # We must not create class fields after the beginning of source code generation
$globalContext.classList().each do |cls|
    res = cls.gen()
    puts wrapLines(res)
    puts wrapLines("///////////////////////////////////////////////////////////////////////")
end
puts wrapLines($auxClasses + "\n") if $auxClasses.size > 0
printMethodCallers()
